<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>oliver</author>
  <title>Blog unter eigener Domain zugänglich machen</title>
  <description />
  <content>&lt;p&gt;Wir sind derzeit bei der Recherche und Installation unserer neuen Firmenseite &lt;a href="http://www.teamaton.com"&gt;www.teamaton.com&lt;/a&gt; und mehreren Blogs, die wir dort betreiben wollen. Uns bietet sich hier eine All-in-one-Lösung wie &lt;a title="The Orchard Project" href="http://www.orchardproject.net/" target="_blank"&gt;Orchard&lt;/a&gt; an, mit der wir sowohl unsere Firmenseite pflegen als auch unsere Blogs hosten und verwalten können.&lt;/p&gt;  &lt;p&gt;Eine Anforderung, die wir darüber hinaus erfüllen wollen, ist der Zugriff auf unsere Blogs über firmenunabhängige Adressen. Hat man einmal seinen eigenen, evtl. auch Multi-User-Blog aufgebaut und eine kleine Community um ihn versammelt, schmerzt ein Umzug auf eine neue Adresse sehr, vor allem, wenn man über die alte Domain nicht mehr verfügt und so keine Weiterleitung einrichten kann. Um einem solchen Problem in Zukunft vorzubeugen, sollen unsere Blogs, die beispielsweise bei Orchard über eine einen virtuellen Unterordner erreichbar sein, über je eine eigene Adresse erreichbar sein.&lt;/p&gt;  &lt;p&gt;In diesem Blogpost will ich beschreiben, wie ich dies im IIS 7 auf einem Windows Web Server 2008 R2 konfiguriert habe und welche Weg nicht zum Ziel führ(t)en.&lt;/p&gt;  &lt;p&gt;In unserem Fall wollen wir zuerst unseren Design-Blog, den wir in unserer Orchard-Installation unter blogs.teamaton.com/design angelegt haben, unter &lt;a href="http://www.friendly-fox.com"&gt;www.friendly-fox.com&lt;/a&gt; zugänglich machen. Dabei wollen wir keine Redirects verwenden – der Nutzer soll sich unabhängig vom Hosting immer auf friendly-fox.com wähnen. Also benötigen wir eine Rewrite-Lösung. Das &lt;a title="IIS URL Rewrite Module" href="www.iis.net/download/urlrewrite" target="_blank"&gt;URL-Rewrite-Module&lt;/a&gt; für den IIS, das mittlerweile in Version 2 vorliegt, bietet sich hierfür an. Wenn man es von o.g. Seite – am einfachsten per WebPI (Web Platform Installer) - installiert hat, sieht man das Modul in der Site-Übersicht in der Kategorie IIS:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=url-rewrite-in-iis.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="url-rewrite-in-iis" border="0" alt="url-rewrite-in-iis" src="http://shades-of-orange.com/image.axd?picture=url-rewrite-in-iis_thumb.png" width="364" height="397" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Mein erster Versuch ging nun in die Richtung, eine Rewrite-Regel direkt hier auf der Site zu definieren. Ich wollte die URL friendly-fox.com auf blogs.teamaton.com/design umschreiben. Also habe ich dort eine neue Regel für diesen Rewrite angelegt (siehe nächster Screenshot). Aber so richtig Sinn macht die Regel an der Stelle nicht, denn:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Damit diese Website überhaupt den Request für friendly-fox.com zur Verarbeitung bekommt, muss ich ein Binding für friendly-fox.com anlegen. &lt;/li&gt;    &lt;li&gt;Das neue Binding führt aber dazu, dass nun die komplette Seite blogs.teamaton.com unter friendly-fox.com erreichbar ist, was wir nicht wollten. &lt;/li&gt;    &lt;li&gt;Die Weiterleitung hat nicht funktioniert. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Der nächste Ansatz war dann, die Rewrite-Regel auf dem IIS selbst anzulegen, so dass dieser die Anfrag nach friendly-fox.com mit den Inhalten von blogs.teamaton.com/design beantwortet. Dazu habe ich eine Regel auf dem Root-Knoten angelegt:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=global-rule.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="global-rule" border="0" alt="global-rule" src="http://shades-of-orange.com/image.axd?picture=global-rule_thumb.png" width="878" height="150" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Leider führte diese Einstellung letztendlich zu einem Redirect statt einem stillen Rewrite, so dass auch diese Option wegfiel.&lt;/p&gt;  &lt;p&gt;Nach einer weiteren Recherche im Netz stieß ich auf den lesenswerten Artikel &lt;a title="10 url rewriting tips and tricks" href="http://blogs.iis.net/ruslany/archive/2009/04/08/10-url-rewriting-tips-and-tricks.aspx" target="_blank"&gt;10 url rewriting tips and tricks&lt;/a&gt;, in dem Punkt “7. Reverse Proxy To Another Site/Server” ziemlich genau beschreibt, was ich machen will. Überrascht hat mich, dass unser Szenario mit dem URL-Rewrite-Module allein anscheinend nicht zu lösen ist – wir benötigen dafür zusätzlich das &lt;a title="Application Request Routing on iis.net" href="http://www.iis.net/download/ApplicationRequestRouting" target="_blank"&gt;Application Request Routing (ARR) Module&lt;/a&gt;. Mit dem WebPI ist die Installation aber ein Kinderspiel, alle Abhängigkeiten werden automatisch mit installiert:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=arr-install.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="arr-install" border="0" alt="arr-install" src="http://shades-of-orange.com/image.axd?picture=arr-install_thumb.png" width="596" height="411" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Nach der Installation des ARR-Module muss man entsprechend o.g. Punkt 7. die Checkbox “Enable proxy” aktivieren. Mit dieser Option soll nun der ursprüngliche Request an friendly-fox.com durch einen Proxy (im ARR) an blogs.teamaton.com/design weitergeleitet werden. Das Modul findet man nach einem Klick auf den Root-Knoten im IIS-Manager-Baum:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=arr-in-iis.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="arr-in-iis" border="0" alt="arr-in-iis" src="http://shades-of-orange.com/image.axd?picture=arr-in-iis_thumb.png" width="533" height="366" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Nach einem Doppelklick im nächsten Fenster setzt man dann die Checkbox:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=arr-proxy.gif"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="arr-proxy" border="0" alt="arr-proxy" src="http://shades-of-orange.com/image.axd?picture=arr-proxy_thumb.gif" width="446" height="212" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Eigentlich hätte ich jetzt schon erwartet, dass die Weiterleitung funktionieren würde. Aber beim Aufruf von &lt;a href="http://friendly-fox.com"&gt;http://friendly-fox.com&lt;/a&gt; bekomme ich nur die IIS-Willkommensseite zu sehen:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=ff-iis-welcome.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="ff-iis-welcome" border="0" alt="ff-iis-welcome" src="http://shades-of-orange.com/image.axd?picture=ff-iis-welcome_thumb.png" width="345" height="254" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Aus irgendeinem Grund klappt der Match auf &lt;font face="Courier New"&gt;^(www.)?friendly-fox.com/$&lt;/font&gt; nicht. Es gibt dafür aber einen Workaround, indem man zuerst einmal auf .* matcht und dann in einer eigens definierten Condition den eigentlichen Match definiert:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=url-reqrite-overview.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="url-reqrite-overview" border="0" alt="url-reqrite-overview" src="http://shades-of-orange.com/image.axd?picture=url-reqrite-overview_thumb.png" width="936" height="233" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Hier die erste Regel noch mal in der Übersicht des IIS: &lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=url-reqrite-complete.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="url-reqrite-complete" border="0" alt="url-reqrite-complete" src="http://shades-of-orange.com/image.axd?picture=url-reqrite-complete_thumb.png" width="549" height="787" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;Jetzt funktioniert die Weiterleitung inkl. aller Unterdateien (Styles etc.), jedoch sind die Links auf der Seite noch anzupassen. Das sollte sich in einem nächsten Schritt mit Hilfe einer “Outbound Rule” erledigen lassen. Aber das in einem nächsten Post.&lt;/p&gt;  &lt;p&gt;Happy Coding, Oliver&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2010-12-31 18:04:31</pubDate>
  <lastModified>2010-12-31 18:04:31</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Blog-unter-eigener-Domain-zuganglich-machen</slug>
  <tags />
  <comments />
  <categories />
  <notifications />
</post>