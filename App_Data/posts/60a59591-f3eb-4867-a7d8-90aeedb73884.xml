<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>robert</author>
  <title>Auf dem Weg hin zu BDD</title>
  <description />
  <content>&lt;p&gt;BDD bietet die Chance, Entwicklungsprozesse zu verbessern. Wo wir sind, wohin wir wollen und wie wir dies erreichen können, darum geht es in diesem Blog-Post. &lt;/p&gt;  &lt;h2&gt;Bestandsaufname&lt;/h2&gt;  &lt;p&gt;Manchmal schreiben wir &lt;a href="http://code.speak-friend.com/post/BDD-Should-infected-Implementierung.aspx"&gt;BDD inspirierten Code&lt;/a&gt;, doch wir erreichen nicht das wesentliche Ziel von BDD: &lt;em&gt;&lt;strong&gt;&amp;quot;Q&amp;amp;A und nicht-technische Projektteilnehmer sollen besser gemeinsam arbeiten können&amp;quot;. &lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;Vereinzelt wird eine Spezifikation im BDD-Style einem Kunden vorgelegt, doch unsere User-Stories sind eher Aufgabensammlungen die komplett losgelöst von der Implementierung stehen. Überspitzt gesagt, ist BDD-Style bei uns eher TDD, mit einer anderen Namenskonvention. &lt;/p&gt;  &lt;h2&gt;Wo soll es hin&lt;/h2&gt;  &lt;p&gt;Ich würde vorschlagen, dass wir die zentrale Idee von BDD auch für uns übernehmen, also: &amp;quot;Wir möchten BDD Nutzen um die Kommunikation zwischen Auftraggeber, UI-Team, Entwicklern und Q&amp;amp;A zu verbesseren.&amp;quot; Was bedeutet das für die einzelnen Rollen: &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Product Owner/ Auftraggeber&lt;/strong&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Arbeitet mit User-Stories und Szenarien in einem vorgegebenem Format &lt;/li&gt;    &lt;li&gt;Bekommt Vogelperspektiven Sicht auf Implementierungsfortschritt &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;strong&gt;Tester/ Q&amp;amp;A&lt;/strong&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Automatische Tests werden aussagekräftiger, der Quelltext wird zugänglicher, weil leichter verständlich &lt;/li&gt;    &lt;li&gt;Kann Testszenarien in Entwickler-freundlicher Sprache formulieren und den Umsetzungfortschritt (passiv) nachvollziehen &lt;/li&gt;    &lt;li&gt;Kann Testszenarien direkt im Quelltext definieren &lt;/li&gt;    &lt;li&gt;Ist wie ein &amp;quot;Product-Owner&amp;quot; für die Q&amp;amp;A Sicht &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;strong&gt;UI-Team&lt;/strong&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Hat einen besseren Blick auf die Entwicklungsgeschehnisse &lt;/li&gt;    &lt;li&gt;Kann leichter beim Spezifizieren unterstützen und gleich das richtige Format für Projektmanager, Kunden und Entwickler liefern &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;strong&gt;Entwickler&lt;/strong&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Implementierungsschritte und Fortschritt werden von Nicht-Technikern nachvollzogen &lt;/li&gt;    &lt;li&gt;Muß in einer Form arbeiten, die die tatsächliche Implementierung der Spezifikationen an das nicht technische Team-dokumentiert &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Konkrete Schritte&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;1: Anforderungserfassung: &lt;/strong&gt;Der erste Schritt den wir gehen müssen ist es Anforderungen, User-Stores etc. in einem BDD tauglichen Format zu erfassen. (Siehe dazu auch weiter unten das Template)&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;2: Implementierungsfeedback: &lt;/strong&gt;Damit alle sehen können wo wir sind, benötigen wir einen Feedback-Mechanismus der Teil der Buildprozess ist, also am Besten vom Continous-Integrations-Server erzeugt wird.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=StoryQ-Report.png"&gt;&lt;img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="StoryQ-Report" border="0" alt="StoryQ-Report" src="http://shades-of-orange.com/image.axd?picture=StoryQ-Report_thumb.png" width="329" height="254" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;(Screenshot zeigt &lt;a href="http://storyq.codeplex.com/"&gt;StoryQ&lt;/a&gt; HTML-Report)&lt;/p&gt;  &lt;h2&gt;Template für BDD-Spezifikation&lt;/h2&gt;  &lt;p&gt;Das Template für die BDD-Spezifikation ist Denglish, hier sollten wir überlegen ob wir Deutsch verwenden, wobei wir Methoden und Klassen (dort wo die Konzepte auch in englisch existieren) eigentlich in Englisch umsetzen &lt;/p&gt;  &lt;p&gt;Titel (Beschreibung der User-Story, auch Mehrzeilig)&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Die User-Story erzählt: &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;As a&lt;/strong&gt; [Rolle] &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;I want &lt;/strong&gt;[Features] &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;So that&lt;/strong&gt; [Nutzen] &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Akzeptanz Kriterium: (als Szenarien)&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Szenario 1: Title &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Given&lt;/strong&gt; [Kontext] &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;And&lt;/strong&gt; [Mehr Kontext]... &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;When&lt;/strong&gt; [Ereignis] &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Then&lt;/strong&gt; [Ergebniss] &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;And&lt;/strong&gt; [Anderes Ergebniss]... &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Szenario 2: .... &lt;/li&gt;    &lt;li&gt;Szenario 3: ... &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Framework oder Konvention&lt;/h2&gt;  &lt;p&gt;Frameworks gibt es wie Sand am &lt;a href="http://code.speak-friend.com/page/NET-BDD-Resourcen.aspx"&gt;Meer&lt;/a&gt;. Welches ist das Richtige? Wie sieht unser Prozess aus, wie wird aus einer User-Story Code? Wie können wir dafür sorgen, dass die Umsetzung und der Umsetzungstand nicht nur beim Implementierer bleibt, sondern auch für alle zur Verfügung steht. Folgende Kriterien könnten wir verwenden: &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Alle Teammitglieder, insbesondere nicht-technische sollen einfachen Zugriff auf den Implementierungsstand erhalten. Das Framework sollte gute Reports erzeugen oder die Reports sollten gut zu erweitern sein. &lt;/li&gt;    &lt;li&gt;Ideal wäre eine Integrationsmöglichkeit mit &lt;a href="http://www.targetprocess.com/"&gt;Target-Process&lt;/a&gt; (hier können wir aber vielleicht die entsprechenden User-Stories-Ids angeben und so zumindest Links erzeugen). Eine Integration über die Testfälle wäre denkbar? &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Spezifikation != Test-Driven-Development&lt;/h2&gt;  &lt;p&gt;Mir scheint es wichtig, dass Spezifikationen nicht mit TDD verwechselt werden und das eine BDD Prozess der viele Rollen umschließt, ergänzend zu Unit- und Integrationstests steht. Unsere Kunden oder das UI-Team interessieren Implementierungsdetails, die vielleicht Test-Getrieben mit Unit-Tests entwickelt wurden nicht. BDD in meinem Verständniss sollte Geschäftslogik-relevant sein. Um BDD-Tests von anderen Tests abgrenzen zu können, könnten sollten Sie vielleicht in einer eigenen Ordnerstruktur landen. Eine Datei und Klassen Namenskonvention sollte BDD-Tests deutlich abheben. &lt;/p&gt;  &lt;p&gt;Das Feedback (z.B.: HTML Reports) über den Implementierungsstatus und die Spezifikation an Nicht-Entwickler sollte also nur BDD-Tests umfassen bzw. diese zumindest alleine stellen.&lt;/p&gt;  &lt;p&gt;Links: &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.google.com/url?sa=D&amp;amp;q=http%3A%2F%2Fblog.dannorth.net%2Fwhats-in-a-story%2F"&gt;http://blog.dannorth.net/whats-in-a-story/&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.google.com/url?sa=D&amp;amp;q=http%3A%2F%2Fblog.thomasbandt.de%2F39%2F2326%2Fde%2Fblog%2Ftdd-bdd-status-quo.html"&gt;http://blog.thomasbandt.de/39/2326/de/blog/tdd-bdd-status-quo.html&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.google.com/url?sa=D&amp;amp;q=http%3A%2F%2Fwww.jamesthigpen.com%2Fblog%2F2009%2F05%2F07%2Fsimple-bdd-reporting-with-nunit%2F"&gt;http://www.jamesthigpen.com/blog/2009/05/07/simple-bdd-reporting-with-nunit/&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2010-06-06 18:21:55</pubDate>
  <lastModified>2010-06-06 19:01:06</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Auf-dem-Weg-hin-zu-BDD</slug>
  <tags />
  <comments />
  <categories>
    <category>7d017c9a-cbb6-4c57-82d0-083052427cda</category>
  </categories>
  <notifications />
</post>