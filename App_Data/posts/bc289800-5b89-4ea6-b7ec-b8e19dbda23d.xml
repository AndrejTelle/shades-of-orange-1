<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>oliver</author>
  <title>URL Rewriting and Routing in Orchard CMS / ASP.NET MVC</title>
  <description />
  <content>&lt;p&gt;Working on &lt;a title="Marinaführer - Marinas guide" href="http://www.marinas.info" target="_blank"&gt;Marinas.info&lt;/a&gt;, we want to create SEO friendly links to specific searches that will hopefully rank high up in the search engines. They should look something like &lt;a href="http://www.marinas.info/germany"&gt;www.marinas.info/germany&lt;/a&gt; for marinas situated in Germany or &lt;a href="http://www.marinas.info/w&amp;iacute;fi"&gt;www.marinas.info/wífi&lt;/a&gt; for marinas that provide wifi internet access. We also plan on supporting most European languages, some 30+ or so, even if not from the start. Anyway, the number of URLs we will generate is likely to explode, and we need a solution to consistently generate and handle those thousands of different URLs. This post investigates a few solutions that have popped up.&lt;/p&gt;  &lt;h2&gt;External URL Rewriting solutions – UrlRewritingNet and the IIS Url Rewrite Module&lt;/h2&gt;  &lt;p&gt;The two solutions listed here are called external because they integrate with the ASP.NET MVC request pipeline in way that they will be invisible to the actual web application. Routes would be rewritten in an early step and the application would only get to see the rewritten URL that it would know how to handle.&lt;/p&gt;  &lt;h3&gt;UrlRewritingNet&lt;/h3&gt;  &lt;p align="left"&gt;Since 2006, &lt;a href="http://www.urlrewriting.net" target="_blank"&gt;UrlRewritingNet&lt;/a&gt; has been around and I assume it’s a widespread solution. We use it in &lt;a href="http://www.camping.info" target="_blank"&gt;Camping.info&lt;/a&gt;, and probably the best part is the easy configuration. Still, I remember that we had a few problems with it that needed fixing, so we would most likely have to use that slightly customized version. I’m not 100% sure if it would work with MVC out of the box since we’ve only used it with ASP.NET WebForms.&lt;/p&gt;  &lt;h3 align="left"&gt;IIS Url Rewrite Module&lt;/h3&gt;  &lt;p align="left"&gt;This is a solution by Microsoft that would certainly get the job done, too. I haven’t really used it yet in any larger project though, so I’d have to dive into it first. If you feel like giving it a go, check out &lt;a href="http://learn.iis.net/page.aspx/734/url-rewrite-module/"&gt;http://learn.iis.net/page.aspx/734/url-rewrite-module/&lt;/a&gt;.&lt;/p&gt;  &lt;h2 align="left"&gt;Internal solutions – Orchard Rewrite Rules and ASP.NET MVC Routing&lt;/h2&gt;  &lt;p align="left"&gt;These approaches work inside the application.&lt;/p&gt;  &lt;h3 align="left"&gt;Orchard Rewrite Rules&lt;/h3&gt;  &lt;p align="left"&gt;&lt;a href="http://orchardrewriterules.codeplex.com/" target="_blank"&gt;Orchard Rewrite Rules&lt;/a&gt; is an Orchard Module that brings (a subset of) mod_rewrite style URL rewriting to any &lt;a title="The Orchard Project" href="http://www.orchardproject.net/" target="_blank"&gt;Orchard&lt;/a&gt; installation. We’ve successfully used it e.g. to redirect traffic from &lt;a href="http://marinas.info"&gt;http://marinas.info&lt;/a&gt; to &lt;a href="http://www.marinas.info"&gt;http://www.marinas.info&lt;/a&gt;. The greatest benefit is that it’s just another module that you can simply enable and disable at runtime from within the application without a need to recycle the app pool as would be the case for the two external rewriting solutions since their configuration is coupled to the web.config file. The drawback of this solution is that we’re also new to its syntax and it’s not that clear (yet) how we would efficiently map the thousands of routes with their dynamic values that we are aiming at.&lt;/p&gt;  &lt;h3 align="left"&gt;ASP.NET MVC Routing&lt;/h3&gt;  &lt;p align="left"&gt;It seems that ASP.NET MVC’s built-in routing engine can provide us with what we are looking for. At first glance, looking at the standard examples of route definition, it didn't appear that promising. Remember, we want to support URLs such as &lt;a href="http://www.marinas.info/germany"&gt;www.marinas.info/germany&lt;/a&gt; and &lt;a href="http://www.marinas.info/wifi"&gt;www.marinas.info/wifi&lt;/a&gt; for a lot of search categories. The routes to match those request would either have to be very specific, e.g. one per category, or very general, e.g. one for all categories. The first approach would lead to the thousands of routes I mentioned earlier, the latter would also catch requests for other parts of the application that might have nothing to do with search since it’s so general. It turns out there are more advanced features in ASP.NET MVC Routing that allow to overcome these restrictions.&lt;/p&gt;  &lt;h3 align="left"&gt;Custom Route Constraint with IRouteConstraint and Custom Route Handler with MvcRouteHandler&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://stackoverflow.com/a/2099313/177710" target="_blank"&gt;This answer on Stack Overflow&lt;/a&gt; to a question concerning exactly the same problem points to a blog post on &lt;a href="http://blogs.microsoft.co.il/blogs/bursteg/archive/2009/01/11/asp-net-mvc-route-constraints.aspx" target="_blank"&gt;writing your own Route Constraint&lt;/a&gt; which is a great way to deal with the second problem mentioned above, that a too general route would match too many requests. The custom route constraint could e.g. constrain the application of a certain route to only valid values.&lt;/p&gt;  &lt;p&gt;Another approach, presented in &lt;a href="http://www.kindblad.com/Search-engine-friendly-URLs-in-ASP_NET-MVC" target="_blank"&gt;this post on SEO friendly URLs in MVC&lt;/a&gt;, would be to derive from the default MvcRouteHandler and implement some custom logic to handle our custom URLs.&lt;/p&gt;  &lt;h2&gt;Conclusion: ASP.NET MVC Routing has it all&lt;/h2&gt;  &lt;p&gt;I’m glad I set out to examine those different solutions because I totally underestimated the power of ASP.NET MVC Routing if I hadn’t. Another great post on &lt;a href="http://samsaffron.com/archive/2011/10/13/optimising-asp-net-mvc3-routing" target="_blank"&gt;Optimizing ASP.NET MVC3 Routing&lt;/a&gt; talks about even more of its aspects and how Stack Overflow handles their large number of routes with high performance using (mostly) built-in functionality. Looks very much like this is the way to go!&lt;/p&gt;  &lt;p&gt;Happy coding!&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2012-08-28 23:41:36</pubDate>
  <lastModified>2012-08-28 23:41:36</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>URL-Rewriting-and-Routing-in-Orchard-CMS-ASPNET-MVC</slug>
  <tags>
    <tag>routing</tag>
    <tag>url-rewriting</tag>
  </tags>
  <comments />
  <categories>
    <category>bc3db496-f484-41a0-860c-c2e57e829fa0</category>
    <category>678a9d57-c1ea-487a-8fd3-4d08dc0be9c4</category>
    <category>3b5447eb-ff3b-4481-9287-0508fce6262b</category>
  </categories>
  <notifications />
</post>