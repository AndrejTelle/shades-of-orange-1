<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>oliver</author>
  <title>A jQuery based tooltip solution for a large web application</title>
  <description />
  <content>&lt;p&gt;Finally, with an update we rolled out last week, (almost) all tooltips on &lt;a href="http://www.camping.info" target="_blank"&gt;Camping.Info&lt;/a&gt; look and behave similar, differing mostly in positioning and size, but not in the general look and feel. We chose the &lt;a href="http://jquerytools.org/demos/tooltip/index.html" target="_blank"&gt;jQuery Tools Tooltip&lt;/a&gt; as the base for our own solution and it got us pretty far, but there were some pitfalls and scenarios that we needed to handle ourselves. This post is about what limitations we experienced and how we dealt with them.&lt;/p&gt;  &lt;h2&gt;The original&lt;/h2&gt;  &lt;p&gt;As you can read in the &lt;a href="http://jquerytools.org/documentation/tooltip/index.html" target="_blank"&gt;jQuery Tools Tooltip documentation&lt;/a&gt;, the tooltip plugin is highly configurable. It can take different elements as the tooltip for any given trigger:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;the value of title attribute of the trigger element &lt;/li&gt;    &lt;li&gt;the html element immediately following the trigger &lt;/li&gt;    &lt;li&gt;the html element immediately following the first parent of the trigger &lt;/li&gt;    &lt;li&gt;an arbitrary html element on the page. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can also position the tooltip pretty much wherever you want relatively to the trigger:&lt;/p&gt;  &lt;p&gt;&lt;img style="display: inline" title="jQuery Tools Tooltip Positioning" alt="jQuery Tools Tooltip Positioning" src="http://jquerytools.org/media/img/tooltip/positions.png" width="297" height="221" /&gt;&lt;/p&gt;  &lt;h2&gt;Our adaptations&lt;/h2&gt;  &lt;h3&gt;Another way to chose the tooltip&lt;/h3&gt;  &lt;p&gt;We found one more useful way to define the tooltip for a trigger element: if the trigger is e.g. a table cell in an html table and you don’t want to specify a static tooltip for some or all table cells but a different one for each cell or at least a number of cells, it makes sense to define the tooltip element &lt;strong&gt;inside&lt;/strong&gt; the trigger (the table cell). Since this effect was not achievable extending the jQuery Tools Tooltip plugin we started changing their source:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=image_34.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://shades-of-orange.com/image.axd?picture=image_thumb_34.png" width="879" height="91" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Breaking the tooltip out of some parent container&lt;/h3&gt;  &lt;p&gt;We also faced some problem properly showing tooltips that needed to “break out” of some bounding box, inside which they were defined (i.e. their html markup). This problem e.g. occurred inside elements with style &lt;font face="Courier New"&gt;position: relative&lt;/font&gt;, which we have a few of on Camping.Info. Our first attempt was to clone the tooltip element and show the clone instead of the original. This worked in &lt;strong&gt;almost all&lt;/strong&gt; cases – until we tried to attach some more behavior to elements inside the tooltip. The behavior, e.g. some click event handler that we expected to fire when clicking on some element inside the tooltip, wouldn’t execute, since we were &lt;strong&gt;working with the clone&lt;/strong&gt;! So we decided to simply move the tooltip up in the DOM tree for the time it is being shown, more precisely just beneath the form tag that we have on all our pages. We create a placeholder at the place where we removed the tooltip to reinsert it again once it’s being hidden. The code we added to the &lt;font face="Courier New"&gt;show()&lt;/font&gt; method looks like this:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=image_35.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://shades-of-orange.com/image.axd?picture=image_thumb_35.png" width="575" height="271" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;… and here’s the counterpart in &lt;font face="Courier New"&gt;hide()&lt;/font&gt;:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=image_36.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://shades-of-orange.com/image.axd?picture=image_thumb_36.png" width="455" height="153" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now, this works quite well everywhere, independent of the position of the tooltip in the DOM tree.&lt;/p&gt;  &lt;h2&gt;Global tooltip configuration&lt;/h2&gt;  &lt;h3&gt;&lt;/h3&gt;  &lt;h3&gt;Using inline static configuration&lt;/h3&gt;  &lt;p&gt;One feature we quickly missed was some kind of static tooltip configuration without calling&amp;#160; &lt;font face="Courier New"&gt;&lt;strong&gt;$(...).tooltip({ settings: ... })&lt;/strong&gt;&lt;/font&gt; for every single tooltip we wanted to create or hook up, respectively. What we came up with is to use the HTML5 data attributes to define any specific configuration &lt;strong&gt;statically&lt;/strong&gt; inside the trigger element’s html markup. Thus, we need to call the tooltip initialization code only once for the whole page. The configuration now looks like this:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=image_37.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://shades-of-orange.com/image.axd?picture=image_thumb_37.png" width="575" height="78" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;We use specific prefixes with the data attributes to make them easier to understand, e.g.&lt;font face="Courier New"&gt; data-&lt;u&gt;&lt;strong&gt;tt&lt;/strong&gt;&lt;/u&gt;-position &lt;/font&gt;for an attribute that is used for &lt;strong&gt;&lt;u&gt;t&lt;/u&gt;&lt;/strong&gt;ool&lt;strong&gt;&lt;u&gt;t&lt;/u&gt;&lt;/strong&gt;ips and&lt;font face="Courier New"&gt; &lt;u&gt;&lt;strong&gt;jq&lt;/strong&gt;&lt;/u&gt;-tt-trigger &lt;/font&gt;for a class that is used by some &lt;strong&gt;&lt;u&gt;jQ&lt;/u&gt;&lt;/strong&gt;uery code for tooltips.&lt;/p&gt;  &lt;p&gt;To process this kind of static configuration we need some custom code that will, at some point, call the original (well, modified by now) plugin code. Unfortunately, the jQuery Tools Tooltip plugin was not designed to allow runtime configuration of the tooltip to show, but we found a way using the&lt;font face="Courier New"&gt; onBeforeShow &lt;/font&gt;and&lt;font face="Courier New"&gt; onHide &lt;/font&gt;event handlers. The basic idea is to change the global Tooltip configuration during the first method so that the tooltip we will be showing will be configured correctly, and to reset the global configuration once the tooltip has been hidden again. To achieve this, we iterate over all configuration properties that the jQuery Tools Tooltip plugin supports and search for the respective data attributes on the currently processes trigger element. One example would be the&lt;font face="Courier New"&gt; position &lt;/font&gt;property: to replace the default value provided by the plugin we look for an attribute that’s called&lt;font face="Courier New"&gt; data-tt-position &lt;/font&gt;and use its value to temporarily overwrite the default value during the&lt;font face="Courier New"&gt; onBeforeShow &lt;/font&gt;event handler.&lt;/p&gt;  &lt;h3&gt;Using global profiles&lt;/h3&gt;  &lt;p&gt;Once we had the static configuration working and started to replace all of those clumsy and overly complicated &lt;font face="Courier New"&gt;AjaxControlToolkit HoverMenuExtender&lt;/font&gt;s, it quickly turned out that we were copy’n’pasting the same configuration in a thousand places. This was not only ugly and violated the DRY principle, it also lead to some unnecessarily bloated html. As a solution to this maintenance nightmare we came up with &lt;strong&gt;profiles&lt;/strong&gt; that comprise a &lt;strong&gt;set of configuration options&lt;/strong&gt; that would else be repeated over and over again:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=image_38.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://shades-of-orange.com/image.axd?picture=image_thumb_38.png" width="507" height="195" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now, they lead to some really clean html markup:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://shades-of-orange.com/image.axd?picture=image_39.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://shades-of-orange.com/image.axd?picture=image_thumb_39.png" width="485" height="155" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;The only change from using the inline static configuration is to use the profile’s properties – everything else stays the same!&lt;/p&gt;  &lt;h2&gt;Conclusion&lt;/h2&gt;  &lt;p&gt;The jQuery Tools Tooltip plugin is a nice, small and highly configurable tool for easy tooltip creation and usage. In a larger web application there a few shortcomings that we’ve addressed here and which we’ve provided working solutions for. We hope to release those changes soon in its own project on &lt;a href="https://github.com/teamaton" target="_blank"&gt;our GitHub account&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Happy coding!&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2012-03-13 01:37:13</pubDate>
  <lastModified>2012-03-13 01:37:13</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>A-jQuery-based-tooltip-solution-for-a-large-web-application</slug>
  <tags>
    <tag>tooltip</tag>
  </tags>
  <comments />
  <categories>
    <category>5887fc9f-4863-444a-8597-435a21657166</category>
    <category>3b5447eb-ff3b-4481-9287-0508fce6262b</category>
    <category>678a9d57-c1ea-487a-8fd3-4d08dc0be9c4</category>
    <category>76e50725-5164-45fe-a885-98420d16f152</category>
    <category>29f0d9fc-f1cb-447e-9a07-b2e11137e0dc</category>
    <category>05acb92b-a993-4f87-b93a-56ee3089918d</category>
  </categories>
  <notifications />
</post>