<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>Anton</author>
  <title>UpdatePanels und Browser-Back-Forward-Buttons</title>
  <description />
  <content>&lt;p&gt;Auf einer Seite X mit UpdatePanels konnte man via asynchronen Postbacks Veränderungen vornehmen. Andere UpdatePanels wurden so aktualisiert – zum Beispiel die Anzeige des Inhalts eines Warenkorbs. Wenn man nun aber von der Seite wegsurft und danach versucht mittels des Browser-Back-Buttons wieder zurück zur Seite X zu gelangen, erreicht man diese natürlich, jedoch sind die Controls in den UpdatePanels nicht in dem Zustand, in denen man sie das letzte Mal gesehen hat. Die Inhalte sind auf dem Stand, auf dem sie waren, als man die Seite X das letzte Mal vollständig geladen hat.&lt;/p&gt;  &lt;h6&gt;&lt;/h6&gt;  &lt;h4&gt;&lt;u&gt;Das allgemeine Problem&lt;/u&gt;&lt;/h4&gt;  &lt;p&gt;Dieses Problem ist gut bekannt als AJAX-Back-Button-Problem. Man findet im Internet viele Problemerörterungen. Hier ein paar Links zum Einstieg:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.oracle.com/technology/pub/articles/dev2arch/2006/01/ajax-back-button.html"&gt;Mark Schiefelbein &amp;quot;Developing Ajax Applications That Preserve Standard Browser Functionality&amp;quot;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.theserverside.com/news/thread.tss?thread_id=38725"&gt;Gegenteilige Meinungen&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.isolani.co.uk/blog/javascript/FixingTheBackButtonThatAjaxBroke"&gt;Fixing the back button that AJAX broke&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.zedwood.com/article/101/ajax-back-button-fix"&gt;AJAX back button fix&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;h4&gt;&lt;u&gt;Viele Lösungen&lt;/u&gt;&lt;/h4&gt;  &lt;p&gt;&lt;font size="2"&gt;Eine weitere Suche im Internet ergab eine Vielzahl von Möglichkeiten, um des Problems Herr zu werden. Falls ich nichts übersehen habe, so wird in allen Fällen ein Hash an die URL gehangen. Als erstes lachte mich &lt;a href="http://code.google.com/p/reallysimplehistory/"&gt;Really Simple History (RSH)&lt;/a&gt; an, aber das Projekt hat schon eine Weile keine Aktualisierungen mehr erfahren. Dann bin ich noch UpdateControls begegnet, die wohl aber auch nur solange genutzt wurden, solange es noch kein ASP.NET AJAX 3.5 gab. Mit letzterem wurden dem &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.aspx"&gt;ScriptManager&lt;/a&gt; einige Funktionalitäten (u.a. &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.addhistorypoint.aspx"&gt;AddHistoryPoint-Methode&lt;/a&gt; und &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.navigate.aspx"&gt;Navigate-Event&lt;/a&gt;) mitgegeben, die dieses Problem ansprechen und auch lösen. Hier die besten Seiten, die das Prinzip beschreiben und gute Anleitungen sind:&lt;/font&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://interviews.dotnetthread.com/2009/02/enabling-browser-back-button-for.html"&gt;Verschiedene Herangehensweisen: HistoryPoints, UpdateControls, jQuery&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/cc488548.aspx"&gt;MSDN: Managing Browser History Using ASP.NET Server Controls&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/cc488538.aspx"&gt;MSDN: Managing Browser History Using Client Script&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/learn/3.5-SP1/video-242.aspx"&gt;Videotutorial&lt;/a&gt; und der dazugehörige &lt;a href="http://dotnetslackers.com/articles/ajax/HandlingTheBackButtonFromServerCode.aspx"&gt;Artikel&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;font size="2"&gt;Für jQuery wurden auch schon etliche Implementationen entwickelt, die das Problem lösen. &lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;font size="2"&gt;Wir haben die HistoryPoints-Funktionalität implementiert, so dass&lt;/font&gt; beim Verändern des Inhalts des Warenkorbs ein HistoryPoint gesetzt wird. Uns ist hier der State egal. In dem Navigate-EventHandler haben wir einfach die betreffenden UpdatePanels geupdated. Das funktionierte soweit ok. Beim Zurück-Surfen auf Seite X wurde sie kurz in dem “falschen” Zustand angezeigt, dann aber gleich die UpdatePanels neu geladen und vollständig angezeigt. Nicht schön, aber es funktionierte. Der Forward-Button funktionierte hier aber nicht.&lt;/p&gt;  &lt;h4&gt;&lt;u&gt;Einfache Lösung&lt;/u&gt;&lt;/h4&gt;  &lt;p&gt;Ich suchte weiter, und, kurz bevor ich aufgeben wollte, fand ich eine erstaunlich einfache Möglichkeit, dem Browser mitzuteilen, dass er eine bestimmte Seite mit dem Back-Button nicht aus dem Cache holen soll, sondern einfach vollständig neu laden soll. Dies löste alle Probleme mit den UpdatePanels. Einfach&lt;/p&gt;  &lt;div style="border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px" id="codeSnippetWrapper"&gt;   &lt;div style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet"&gt;     &lt;pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"&gt;Response.Cache.SetNoStore();&lt;/pre&gt;
&lt;!--CRLF--&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;in die Page_Load-Methode einfügen. Wer mehr zu den Klassen lesen möchte: &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.httpresponse.cache.aspx"&gt;HttpResponse.Cache Property&lt;/a&gt; und &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.httpcachepolicy.aspx"&gt;HttpCachePolicy Class&lt;/a&gt;. Diese Lösung habe ich nur nicht so schnell gefunden, weil sie von all den anderen Lösungen zu dem AJAX-Bach-Button-Problem verdrängt wird. Aber für die Problematik, wie sie sich uns darstellte, ist dies die beste Alternative, da wir ja wärend der AJAX-Calls keine History speichern wollen, was die meisten anderen Lösungen tun. Außerdem kamen wir so um die oft hässlichen Hashs in der URL herum. Auch der Forward-Button funktioniert verständlicherweise.&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2010-04-09 21:12:59</pubDate>
  <lastModified>2010-04-09 21:12:59</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>UpdatePanels-und-Browser-Back-Forward-Buttons</slug>
  <tags />
  <comments />
  <categories />
  <notifications />
</post>