<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>oliver</author>
  <title>The Long Road to Browser Based Acceptance Testing</title>
  <description />
  <content>&lt;p&gt;In my previous post on &lt;a href="http://shades-of-orange.com/post/2012/08/22/Writing-Acceptance-Tests-for-an-Orchard-ASPNET-MVC-Application-using-SpecFlow-Coypu-(Selenium)-and-the-MvcIntegrationTestFramework.aspx" target="_blank"&gt;Writing Acceptance Tests for ASP.NET MVC&lt;/a&gt;, I described the setup that we got to work for us to execute automated acceptance tests for our application &lt;a title="Marinaführer - Marinas guide" href="http://www.marinas.info" target="_blank"&gt;Marinas.info&lt;/a&gt;. This post provides some more background on the topic which problems we encountered and how we solved them.&lt;/p&gt;  &lt;h2&gt;From MvcIntegrationTestFramework to Browser back to MvcIntegrationTestFramework and back to Browser&lt;/h2&gt;  &lt;h3&gt;MvcIntegrationTestFramework I&lt;/h3&gt;  &lt;p&gt;When we started writing our first acceptance tests we, of course, took a look at the acceptance tests the &lt;a title="The Orchard Project" href="http://www.orchardproject.net/" target="_blank"&gt;Orchard&lt;/a&gt; team had already written inside the &lt;font face="Courier New"&gt;Orchard.Specs&lt;/font&gt; project of the Orchard source solution. They basically use the exact same approach as the MvcIntegrationTestFramework, hosting the AUT (application under test) in a manually created, ASP.NET enabled AppDomain. Unfortunately, quite early I ran into problems when using cookies that I wasn’t able to solve, so we decided to just do browser based tests.&lt;/p&gt;  &lt;h3&gt;Browser Tests I&lt;/h3&gt;  &lt;p&gt;Automatically executing browser based tests has proven not to be as simple as it may look, at least for us. You have a host of components that need to play well together: your test code, a web server, a browser, the AUT, and in a continuous integration scenario you also have the test execution environment, &lt;a href="http://www.jetbrains.com/teamcity/" target="_blank"&gt;TeamCity&lt;/a&gt; in our case. Here’s an overview of some of the problems we ran into:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;on TeamCity, the IIS Express process would not terminate during test teardown &lt;/li&gt;    &lt;li&gt;on TeamCity, the browser instances would not close when an exception happened during the test &lt;/li&gt;    &lt;li&gt;a Firefox Portable instance would work on one dev’s machine but not on another one’s &lt;/li&gt;    &lt;li&gt;Internet Explorer seemed to work for a long time (at least locally) until we ran into problems with missing cookies when executing the tests on our CIS (Continuous Integration Server) &lt;/li&gt; &lt;/ol&gt;  &lt;h3&gt;MvcIntegrationTestFramework II&lt;/h3&gt;  &lt;p&gt;These problems and the fact that each test would take 2-3 min to run (mostly due to Orchard site setup running as part of each scenario’s setup, and the use of the browser) pushed us to try the MvcIntegrationTestFramework (again, if you count copying &lt;font face="Courier New"&gt;Orchard.Specs&lt;/font&gt; as the first time). We found a slightly evolved version at &lt;a href="https://github.com/cvrajeesh/MvcIntegrationTestFramework"&gt;https://github.com/cvrajeesh/MvcIntegrationTestFramework&lt;/a&gt; which was already ready to use in an MVC3 project and enhanced at along the way. It worked quite well with a modified version of Orchard’s default &lt;font face="Courier New"&gt;Global.asax.cs&lt;/font&gt; which we found in the &lt;font face="Courier New"&gt;Orchard.Specs&lt;/font&gt; project. Unfortunately, trying to run a few more complicated tests on our AUT revealed one problem after the other that seemed to be related to the modifications we made to the application which made it in a few ways behave differently than e.g. our stage version. After spending quite a few hours on fixing those problems, we decided that it would be best to use the exact same version of our Marinas.info application that would be running on our stage and live systems and write test against that. This, though, had the effect that none of the magic hooks of the MvcIntegrationTestFramework worked anymore. They simply wouldn’t fire when using the &lt;font face="Courier New"&gt;Global.asax.cs &lt;/font&gt;that ships with the Orchard.Web project. Sadly, I was unable to find the root cause of this (mis-)behavior.&lt;/p&gt;  &lt;h3&gt;Browser Tests II&lt;/h3&gt;  &lt;p&gt;In the end, we went back to browser testing, this time using &lt;a href="http://www.mozilla.org/en-US/firefox/organizations/all.html" target="_blank"&gt;Firefox 10.0.6 ESR&lt;/a&gt; (Extended Support Release) and some &lt;a href="http://www.neovolve.com/post/2012/03/18/Spinning-up-IISExpress-for-integration-testing.aspx" target="_blank"&gt;improved wrapper code for managing the IIS Express process&lt;/a&gt;. But we kept the approach that MvcIntegrationTestFramework gives us, namely running code inside an independent AppDomain that hosts our AUT, to execute Orchard commands faster than by spinning up a Windows command processor and remote controlling that.&amp;#160; We also stopped running the Orchard setup procedure for every scenario – instead we set up the application instance once at the beginning of all tests and reset the database to a predefined, clean state before each scenario runs. This cut down test execution from previously 2-3 min to 30-45 sec which is quite an improvement.&lt;/p&gt;  &lt;h2&gt;Conclusion&lt;/h2&gt;  &lt;p&gt;If you develop a fairly complex application, you have to roll your own environment for testing, automation, and continuous integration. The phases our code has gone through have taught me a lot, although there are still some “mysteries” unsolved. For now, we’re happy to have reliable automated acceptance tests. That’s what this was all about in the first place.&lt;/p&gt;  &lt;p&gt;Happy Coding!&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2012-08-22 22:15:45</pubDate>
  <lastModified>2012-11-07 08:58:38</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>The-Long-Road-to-Browser-Based-Acceptance-Testing</slug>
  <tags />
  <comments />
  <categories />
  <notifications />
</post>